/*CSS также как и HTML нужно записывать в отдельный файл.
(можно внутри HTML, но так не принято делать)
В HTML есть теги, а в CSS селекторы и свойства.
Чтобы скажем, придать ссылке другой цвет нужно использовать селекторы.
1)Селектор по имени тега(У ссылки тег 'a'). То, что будем писать в {} будет применяться ко всем ссылкам на странице.
Свойства - нужны для того, чтобы указать каким образом мы хотим изменить элемент.
У этого селектора мы должны указать свойство, которое будет менять цвет ссылок(потом научимся менять цвета у конкретных ссылок).
Синтаксис: селектор {свойство1:значение;свойство2:значение;}
Нужно подключить наш CSS файл к HTML с помощью тега 'link', и тогда наш HTML подгрузит себе все селекторы и их свойства.
Подключать CSS файлов можно сколько угодно(но лучше 1, и в нём все записывать) */
a /*Селектор по имени тега (изменит сразу все ссылки)*/
{
	color: green; /*Свойство - меняет цвет текста*/	
	font-size: 20px; /*Свойство - меняет размер текста, значение либо в пикселях(стандартно 16), либо в процентах.
	Размер измениться только у ссылок, так как мы делаем это все в селекторе(по имени тега) тега 'a'*/

}
div /*Селектор по имени тега*/
{
	color: white; /*Цвета можем выбирать через HEX - шестнадцатеричное представление цвета в формате RGB 
	Можно найти себе цвет на сайте https://htmlcolorcodes.com/color-picker/ */
}
body
{
	background-image: url(images/); /*Свойство - делает фон веб-страницы, 
	путь нужно указывать через параметр url(здесь адрес);*/
	/*background-repeat: no-repeat;
	background-position: center center;
	background-attachment: fixed;
	background-size: cover;*/
}

/*Чтобы поменять цвет конкретной ссылки, её нужно идентифицировать в HTML(то есть выделить из толпы)  
2)Селектор по имени идентификатора                         
Синтаксис: #имяидентификатора {свойство1:значение;}   */
#a1 /*Селектор по имени идентификатора*/
{
	color: blue;
	font-size: 50px;
}

/*3)Селектор по классу. Класс - это например множество ссылок над которыми будем работать(со всеми сразу)
Синтаксис: .имякласса {свойство1:значение;} */
.human
{
	color: #4C8BF5
}
.animal
{
	font-size: 50px;
}
.lion
{
	color: yellow;
}
.monkey
{
	color: green;
}
.message
{
	color: #000000; 
	background-color: #DD6AE1FF; /*Свойство - меняет цвет фона(фон для текста). Цвету фона можно задать рамку: */
	border: 1px solid #323232; /*Свойство - задает размер рамки, принимает 3 параметра: 
		1)Размер рамки(толщину в пикселях) 2)Тип рамки solid(сплошная), dashed(пунктирная), dotted(квадратики-точки)
		double(двойная сплошная), inset(), outset(), ridge(), groove(), 3)Цвет рамки 
		border-bottom - рамка только внизу, остальные также(top/left/right) */
	margin: 10px; /*Свойство - отвечает за внешние отступы(со всех сторон) */
	/*margin-bottom: 10px; Отступ вниз */
	/*margin-top: 10px;    Отступ вверх*/
	/*margin-left: 10px;   Отступ слева*/
	/*margin-right: 10px;  Отступ справа*/ 
	padding: 10px; /*Отвечает за внутренние отступы(у него также есть -bottom/top/left/right*/	
}
.message2
{
	/*border-bottom: 3px solid grey; Так мы создаем рамку сразу через 3 значения, но можно и по отдельности:*/
	border-bottom-width: 3px; /*толщина рамки снизу */
	border-bottom-style: solid; /*тип рамки(хотя это уже линия) снизу */
	border-bottom-color: grey; /*цвет границы снизу */
	/*Точно также, можно сделать для top/left/right */
}

/*4)Событийные селекторы(псевдо-классы)(по классам) - придают стиль элементам только тогда, когда что-либо происходит.
hover - наведение мыши на какой-либо элемент 
Синтаксис: селектор/#имяидентификатора/.имякласса:hover           */
.dinamic_navedenie:hover 
{
	border: 5px solid #323232;
	font-size: 20px;
}
.visited_href:visited /*visited - применяется к уже посещённым ссылкам, задаем им оформление*/
{
	color: #900060; /*Цвет посещенных ссылок*/
}
 
#a2
{
	background-color: black;
	color: yellow;
	margin: 5px;
	padding: 5px;
	border: 5px solid red;
	border-radius: 30px;/*Свойство - закругляет рамку. 
		border-bottom-left-radius - закругляет рамку левого нижнего угла, необязательное второе значение предназначено для создания эллиптического уголка, первое значение при этом устанавливает радиус по горизонтали, а второе — радиус по вертикали   
		border-bottom-right-radius - закругляет рамку правого нижнего угла
		border-top-left-radius - закругляет рамку левого верхнего угла
		border-top-right-radius - закругляет рамку правого верхнего угла */
	opacity: 0.5;/*Свойство - задает прозрачность элемента*/
	box-shadow: 3px 3px 7px #000000; /*Свойство - задает тень, принимает 4 параметра: 
		1)Сдвиг по оси х(направо 3px налево -3px) 2)Сдвиг по оси у(вверх+ вниз-) 3)Размытие тени 4)Цвет тени */
	width: 300px; /*Свойство - задает ширину элемента*/
	height: 16px; /*Свойство - задает высоту элемента*/
	display: block;/*Свойство - нужно чтобы иметь возможность отключить элемент если он стал не нужен. Параметр none отключает элемент. Параметр block стандартный, ничего не делает. */
	text-align: left;/*Свойство - выравнивание текста. Значения: left - по левому краю right - по правому краю center - по центру */
	font-weight: 666;/*Свойство - задает жирность шрифта (400 по стандарту, 1000 максимум)*/
	
	transform: rotate(5deg) scale(1); /*Свойство - позволяет повернуть элемент, в его значение должны указать функцию
	трансформирования и ее параметр. rotate - поворачивает элемент(параметр в градусах) 
	scale - увеличивает или уменьшает элемент на определенное значение.*/
	transition: 3.0s transform;/*Свойство - позволяет одновременно задать значения transition-property, transition-duration, 
	transition-timing-function и transition-delay
	transition-duration - устанавливает время, за которое произойдет анимация 
	transition-property - устанавливает имя стилевого свойства , значение которого будет отслеживаться для создания эффекта перехода(у нас transform)  */ 
}

#a2:hover
{
	transform: rotate(-3deg);
} 

#a3
{
	height: 200px; /* Высота блока */
    width: 200px; /* Ширина блока */
    overflow: auto; /* Добавляем полосы прокрутки */
    padding-left: 15px; /* Отступ от текста слева */
    background: url(images/Geralt.jpg) repeat-y grey; /*repeat-y grey - делает фон по вертикали(если нет картинки или она маленькая*/
	background-position: center center; /*Свойство - задает начальное положение фонового изображения, 
	установленного с помощью свойства background-image. У него есть два значения, по горизонтали(left, center, right)
	и по вертикали(top, center, bottom), также можно задавать положение в % или px */
}

#a4
{
	background: url(video/321231123.png) no-repeat 0 2px; /* Фоновый рисунок */
	padding-left: 70px; /* Отступ слева */
}

#a5 /*Для тега aside(боковое меню)*/
{
	background: #f0f0f0;
	padding: 10px;
	width: 200px;
	float: right;
}	

#a6
{
	float: right; /*Свойство - определяет, по какой стороне будет выравниваться элемент, 
	при этом остальные элементы будут обтекать его с других сторон значение none - отключает это свойство
	right - элемент будет справа left - элемент будет слева inherit - наследует значение родителя*/
	margin-right: 300px;
}

#a7
{
	float: left;
	background-color: yellow;
	border 5px solid red;
	color: red;
	width: 500px; 
}

#a8
{
	background-image: url(images/8kphoto.jpg);
	background-size: 100% auto; /*Свойство - масштабирует фоновое изображение согласно заданным размерам.
	auto - если задано только для одной стороны, то размер сохранится в пропорции.
	cover -  размер изображения будет такой, чтобы его ширина и высота поместились в заданную область 
	Чтобы изображение полностью поместилось, хоть и растянутое нужно записать значения 100% 100% */
	height: 279px;
	weight: 300px;
	overflow: auto;
	color: blue;
	font-size: 28px;
}

#a9
{
	border: 4px double black;
	/*border-collapse: collapse;*/ /*Свойство - дает возможность изменить вид границ вокруг ячеек таблицы.
	Это свойство играет роль, когда для ячеек установлена рамка, тогда в месте стыка ячеек получится линия двойной толщины(внутренние)
	(или таблица будет обведена рамкой 2 раза(внешние рамки)). Значение collapse будет убирать двойные линии separate - значение по умолчанию(будут показываться обе рамки)*/
	border-spacing: 10px 10px; /*Свойство -задает расстояние между границами ячеек в таблице (неработает если установлен border-collapse: со значением collapse;)
	Одно значение устанавливает расстояние сразу по вертикали и горизонтали, два значения: первое по горизонтали второе по вертикали*/
}

#a10
{
	background-color: #ccc; /*Цвет фона названий столбцов таблицы*/
}

#a11
{
	border: 1px solid black;
	padding: 5px; 
    margin-bottom: 5px; 
	text-align: center;/*Свойство - выравнивание текста по центру(center), правому и левому краях и тд.
	Свойство работает для блочных элементов(абзац,div) выравнивание внутри все строчное содержимое, включая изображения. */
	text-decoration: underline;/*Свойство - добавляет оформление текста(подчеркивание,перечеркивание,линии над текстом, мигания-осуждаются) 
	Значения: [line-through - перечеркнутый текст] [overline -линия над текстом(сверху)] [underline - линия под текстом(снизу)] [none - отключает]*/
	margin-right: 500px;  /*Уменьшаем рамку справа*/
}

/*Выпадающее меню(CSS)        */
#a12
{
  text-decoration: none; /*Чтобы ссылки не подчеркивались*/
}
.menu 
{
  margin: 0;
  padding: 0;
  list-style: none; /*Чтобы небыло кружочков от тега ul*/
}
/*Внешний вид меню*/
.side
{
  width: 200px;
  margin: 20px;
}
.menu a /*Изменяем в классе menu только ссылки(a)*/
{
  background-color: #3d3d3d; /*Цвет фона меню*/
  color: #fff; /*Цвет текста(fff - белый)*/
  padding: 10px;
  display: block; /*Меню растягивается на */
  border-bottom: 2px solid green; /*Нижнее подчеркивание для каждого пункта меню*/
}
.menu a:hover
{
  background-color: green; /*При наведении пункт меню будет подсвечиваться*/
  transition: 1s all; /*Время, за которое будет происходить подсвечивание(при наведении)*/
  padding: 10px 0 10px 15px; /*Поочередно устанавливается значения внутренних отступов для верхнего, правого, нижнего и левого края.*/
}
/*Всплывающие пункты */
.menu_list
{
  position: relative; /*Чтобы привязать местоположение подпунктов к пунктам */
  /*значение relative - положение элемента устанавливается относительно его исходного места*/
}
.menu_drop
{
  padding-left: 0px;
  list-style: none; /*Чтобы небыло кружочков от тега il*/
  position: absolute; /*Подпункты будут располагаться справа от пунктов(с помощью свойства top выравниваем их на один уровень)*/
  width: 100%; /*Чтобы меню растягивалось на всю ширину*/
  left: 100%; /*Сдвигаем подпункты в правую сторону*/
  top: -9999em; /*Свойство - определяет расстояние сверху(точно также работают свойства top/left/right/bottom. 
  Так как при наведении на подпункты они будут всплывать (с невидимой зоны) то делаем так чтобы они всплывали очень далеко, 
  а в псевдо-классе hover пишем top: 0; и тогда подпункты будут всплывать только при наведении на пункты*/
  opacity: 0; /*Временно сделали их невидимыми*/
  /*Для подпунктов задаем абсолютное позиционирование - чтобы они никак не влияли на структуру сайта, потому что если будет идти контент
  и position будет не absolute то меню будет сбивать контент*/
  transition: 0.5s opacity; /*Анимация появления подпунктов, ставим значение opacity(чтобы подпункты не падали сверху(так как top: -9999em;)*/
  border-left: 10px solid transparent; /*Граница между пунктами и подпунктами будет прозрачная(transparent)*/
}
.menu_list:hover .menu_drop /*При наведении на пункты - подпункты будут меняться*/
{
  opacity: 1; /*Теперь при наведении подпункты будут становиться видимыми*/
  top: 0; /*Размещаем подпункты на одном уровне с соответствующими им пунктам*/
}
.menu li:first-child a, /*Закругляем углы https://www.youtube.com/watch?v=7H7FE71xS9w(9:30)*/
.menu li .menu_drop li:first-child a
{ 
  border-radius: 3px 3px 0 0;
}
.menu li:last-child a, 
.menu li .menu_drop li:last-child a
{
  border-radius: 0 0 3px 3px;
}
.menu li .menu_drop li a
{
  border-radius: 0;
}
.menu_list::after /*Псевдоэлемент - используется для вывода текста после содержимого элемента, к которому он добавляется, работает*/
{ /*вместе со свойством content*/
  content: " "; /*Свойство - позволяет вставить "контент" после или до элемента(с помощью псевдоэлементов ::after и ::before*/
  position: absolute;
  border-width: 10px; 
  border-style: solid;
  border-color: transparent transparent transparent white; /*Создаем треугольники которые будут показывать пункты в которых есть подпункты сверху, справа, снизу - прозрачные, слева - белый*/
  top: 1em; /*Размещаем треугольники на одном уровне с пунктами, где есть подпункты*/
  right: 0.7em; /*Перемещаем треугольники вправо*/
  transition: 0.5s;
}
.menu_list:hover::after
{
  transform: scaleX(-1);
}

#vmeste
{
	background-color: green;
	
	position: relative;	
}
#pribavlenie
{
	display: inline-block;
}
/*#vmeste #value3
{
	position: absolute;
	left: 100px;
	top: 3594px;
	
}
#vmeste #otnimanie
{
	position: absolute;*/ /*При абсолютном позиционировании элемент не существует в потоке документа и его положение задаётся относительно краёв браузера*/
	/*left: 200px;
	top: 3545px;
}
#vmeste #value6
{
	position: absolute;
	left: 90px;
	bottom: 2px;
}*/

#a13
{
	border-style: solid;
	border-color: green; /*Свойство - устанавливает цвет рамки*/
	border-width: 3px 9px 3px 9px; /*Свойство - задает толщину границ, значение может быть одно(сразу для всех) или индивидуально для каждой стороны*/
	padding: 10px;
}

#a14
{
    display: inline-block; /*Распологает элементы слева-направо display: block; Располагает элементы сверху-вниз(с одинаковыми id)*/
    width: 300px;
    height: 40px;
    box-shadow: 5px 5px 5px rgba(0,0,0,0.7);
	/*margin-left: auto;
    margin-right: auto;*/
}
#a14:hover 
{
    box-shadow:inset 2px 2px 2px rgba(0,0,0,0.5);
    background-color: red;
}
#a15
{
	text-align: center; /*Выровняло не только текст но и видео*/
	background-image: url(http://img0.joyreactor.cc/pics/post/full/%D0%98%D0%B3%D1%80%D1%8B-%D0%BE%D0%B1%D0%BE%D0%B8-%D0%B4%D0%BB%D1%8F-%D1%80%D0%B0%D0%B1%D0%BE%D1%87%D0%B5%D0%B3%D0%BE-%D1%81%D1%82%D0%BE%D0%BB%D0%B0-World-of-Warcraft-demon-2335810.jpeg);
	background-position: center center;
	position:relative;	
}
#a16
{
	/*margin-left: auto;*/  /*Блок по горизонтали центрируется. Значение margin-left:auto/margin-right:auto заставляет браузер выделять */
    /*margin-right: auto;*/ /*под margin всё доступное сбоку пространство. А если и то и другое auto, то слева и справа будет одинаковый */
    /*width: 1px;*/ /* отступ, таким образом элемент окажется в середине.  */ 
	/*Это выровняет видео вверх-вниз*/
}